########### MODELO DE REGRESIÓN MÚLTIPLE ############
##### Contiene más de una variable independiente

##### Una empresa que vede mochilas busca encontrar la relación que hay entre 
##### capacidad, calidad y precio

capa<- c(4330, 5500, 5500, 4700, 5200, 5500, 4700, 5500, 5800, 5000)
##### capacidad: independiente (x2)

calidad<- c(2, 3, 4, 3, 4, 4, 4, 5, 5, 5)
##### calidad: independiente (x1)

precio<- c(190, 219, 249, 249, 250, 340, 289, 395, 439, 525)
##### precio: dependiente (y)

mochila<- data.frame(precio,capa,calidad)
##### Para poder quitar las observaciones que al final nos marchan "Cooks distance"
##### para que nos de una mejor relación 

##### Primero aplicamos una correlación
cor(mochila, use="everything", method = "pearson")
##### observemos que las variables tienen correlaciones diversas
##### aplicamos modelo

modmo<- lm(precio~calidad+capa)
summary(modmo) 
##### Para mandar llamar al modelo o poder ver los resultados, se revisa la R2 
##### ajustada por ser un mRM tenemos una r2 ajustada de 0.7 lo que implica que 
##### la recta de regresión explica en 70 por ciento la variabilidad del modelo 
##### revisando el valor F y p-value tenemos que si cumple con los criterios de 
##### un buen ajuste (F>1 Y PVALUE < 0.05) con estos datos podemos mencionar que 
##### estamos ante un buen modelo por lo que se pasa al diagnóstico.

##### El diagnóstico se realiza para poder generalizar los resultados del modelo
##### a partir de la revisión de los supuestos.

##### Lo primero que se hace es un mRM es observar gráficamente los supuestos.

##### En primer lugar se contrastan los valores residuales contra los valores 
##### ajustados. Se realiza con la función plot y el argumento which=1 
##### (wich es unargumento que contrasta o hace un gráfica de dispersión de una 
##### varianza constante o para ver si cumple con el supuesto de normalidad).

##### Recuerden que el pch cambia la figura de las observaciones

plot(modmo, which = 1,pch = 3)

##### Aquí esperamos que los residuos se distribuyan sin patrón.
##### Una tendencia en la variabilidad de los residuos sugiere que la varianza
#####  está relacionada con la media, violando el supuesto de varianza constante.

########## SUPUESTO DE NORMALIDAD ########## 
plot(modmo, wich = 2, pch = 3)

##### En este caso esperamos que los residuos tipificados alrededor de la línea se
##### observa que si hay distribución normal.

########## TERCER SUPUESTO ########## 
##### Los residuos están estandarizados por sus desviaciones estándar estimadas.

plot (modmo, wich = 3, pch = 3)

##### Aquí podemos ver si los residuos se distribuyen constantes en los valores 
##### ajustados, una gráfica sin patrón observable.

########## CUARTO SUPUESTO ########## 

plot(modmo, wich = 5, pch = 3)

##### Expone la improtancia de cada observación en el modelo en esta distancia el 
##### gráfico nos muestra las observaciones que podrán impactar en el modelo, por
##### lo que se sugiere eliminarlas.



########## CORRIGIENDO ##########

mochil1<-mochila[c(-1,-7,-10),] 
##### [renglones, columnas]

mochil2<-mochila[,-2] 
##### como sólo es un elemento no se pone c (que es para definir un vector)

cor(mochil1, use="everything", method = "pearson")

help(lm)

##### MÉTODO 1
modmo<- lm(precio~calidad+capa, mochil1)
##### LM(FÓRMULA, DATOS, SUBSET->CONTRASTAR SÓLO ALGUNOS DATOS

##### MÉTODO 2
modmo2<- lm(mochil$precio~mochil1$calidad+mochil1~capa)

summary(modmo) 

##### Para mandar llamar al modelo o poder ver los resultados, se revisa la R2 
##### ajustada por ser un mRM tenemos una r2 ajustada de 0.7 lo que implica que 
##### la recta de regresión explica en 70 por ciento la variabilidad del modelo 
##### revisando el valor F y p-value tenemos que si cumple con los criterios de 
##### un buen ajuste (F>1 Y PVALUE < 0.05) con estos datos podemos mencionar que 
##### estamos ante un buen modelo por lo que se pasa al diagnóstico.

##### El diagnóstico se realiza para poder generalizar los resultados del modelo
##### a partir de la revisión de los supuestos.

##### Lo primero que se hace es un mRM es observar gráficamente los supuestos.

##### En primer lugar se contrastan los valores residuales contra los valores 
##### ajustados. Se realiza con la función plot y el argumento which=1 
##### (wich es unargumento que contrasta o hace un gráfica de dispersión de una 
##### varianza constante o para ver si cumple con el supuesto de normalidad).

##### Recuerden que el pch cambia la figura de las observaciones

plot(modmo, which = 1,pch = 3)

##### Aquí esperamos que los residuos se distribuyan sin patrón.
##### Una tendencia en la variabilidad de los residuos sugiere que la varianza
#####  está relacionada con la media, violando el supuesto de varianza constante.

########## SUPUESTO DE NORMALIDAD ########## 
plot(modmo, wich = 2, pch = 3)

##### En este caso esperamos que los residuos tipificados alrededor de la línea se
##### observa que si hay distribución normal.

########## TERCER SUPUESTO ########## 
##### Los residuos están estandarizados por sus desviaciones estándar estimadas.

plot (modmo, wich = 3, pch = 3)

##### Aquí podemos ver si los residuos se distribuyen constantes en los valores 
##### ajustados, una gráfica sin patrón observable.

########## CUARTO SUPUESTO ########## 

plot(modmo, wich = 5, pch = 3)

##### Expone la improtancia de cada observación en el modelo en esta distancia el 
##### gráfico nos muestra las observaciones que podrán impactar en el modelo, por
##### lo que se sugiere eliminarlas.



########## 30 de Septiembre de 2016 ##########

##### Después que analizas graficamente se aplican pruebas para confirmar que el 
##### modelo de regresión múltiple sí cumple con los supuestos.

##### Para aplicar estas pruebas (lo que vamos a hacer vamos a sacar los valores
##### ajsutados, los valores estandarizados y los valores) se generan los valores
##### ajustados, residuales y estandarizados.

mochila$ajustados <- fitted (modmo)

##### fitted: es para obtener los valores ajustados ("y" gorrito), que es la recta
##### que nos está ajustando

##### $_____ nombre de la variable que se le va a poner dentro de mi base

mochila$res <- residuals (modmo)

#View (mochila)

##### Generando la R estandarizada
mochila$rstud <- rstudent(modmo)

##### base<-nombre de la nueva variable <- función (base a la que queremos aplicar 
########## la función)
##### R studio: para los errores o residuales; mientras más residuales tenga peor
##### está nuestro estudio.

##### Prueba de normalidad

##### Paquetería lmtest
install.packages("lmtest")
require(lmtest)
ks.test(mochil$rstud, "pnorm") ##### Para la prueba de normalidad
##### (variable, prueba que queremos)

##### Se plantea una prueba de hipótesis y se espera un p-value mayor a 0.05, si 
##### tenemos un p-value mayor a 0.05 no se rechaza la hipótesis nula y se acepta
##### que hay normalidad.

##### En este caso el modelo pasa la prueba de normalidad 

##### La segunda prueba que se hace es la homogeneidad de varianzas y esta prueba
##### se realiza con la función "bptest"

bptest(modmo, studentize = FALSE, data = mochila)
##### studentize: para quitar los errores estandarizados, buscamos que salgan los 
##### errores estandarizados y no los de rstudent.

##### Tenemos un p-value mayor a 0.05, por lo tanto pasa la prueba de homogeneidad

##### VARIANZAS
##### La tercera prueba se llama de durbin watson, la función para está prueba es
##### "dw()"

dwtest(modmo, alternative= "two.sided", data= mochila)
##### alternative: 
##### En esta prueba hay dos formas para comprobar 
##### 1) el p-value mayor a 0.05
##### 2) el valor de Durbin Watson (rango aceptable 1.5 a 2.5) ->esto quiere 
##### decir que hay independencia entre los errores o que no hay correlación 
##### entre los mismos.

##### Hasta aquí podríamos confirmar que no hay correlación entre los residuos.

##### Con estas pruebas ya se confirma que tenemos un modelo con buen ajuste. Sin
##### embargo hay que revisar los casos atípicos {con unas pruebas que nos permite
##### confirmar o retractar lo que "vimos ayer" (más arriba cuando intentamos 
##### eliminar los datos que marcaban error de cooks)}... para revisar los atípicos
##### se usa la librería car

install.packages("car")
require (car)
outlierTest(modmo)

##### outlierTest: Muestra los casos atípicos dentro de mi modelo

##### Una vez que observamos los casos atípicos procedemos a conocer la influencia
##### de estos casos en el modelo. Para observar la influencia se utiliza la 
##### función "influence.measures()"

influ<- influence.measures(modmo)
##### Se genera un nuevo objeto
summary(influ)
##### Aquí se ve los casos que pueden tener mayor influencia en el modelo

##### En la primera columna se observan los casos más influyentes en este modelo
##### son 1, 2 y 10.

##### Las columnas que hacen referencia a dfb nos indican la influencia en los 
##### coeficientesdel modelo.

##### Las columnas que nos presetan mayor interés son las cook.d y hat que nos 
##### exponen con mayor claridad la influencia, el cook.d es la distancia de
##### cook y entre más cercano a 1 hay mayor infuencia de la observación; en este
##### caso la obs 10 es la que tiene mayor distancia, en esta distnacia valores 
##### mayores a 1, hay certeza de que sí influyen en la columna de hat se asocia 
##### con las medidas de leverage que varían entre 0 y 1. Entre más cercano a 1, 
##### mayor influencia.

##### Además de estas pruebas, se hace el análisis gráfico de los casos influyentes
##### para este análisis tenemos la función "influencePlot()"... se requiere la
##### librería "car".

influencePlot(modmo)

##### El análisis de este gráfico se realiza con base en el tamaño de las 
##### circunferencias que arroja, es decir, a mayor cincunferencia el caso tiene
##### mayor influencia 

##### Gráfica de distancia de cook. se requiere de la librería "faraway"

install.packages("faraway")
require (faraway)
influencePlot(modmo)

##### COMO EN LAS COMPUS DE LA ESCUELA NO SE PUEDE ENTONCES SE OCUPARÁ OTRA 
##### FUNCIÓN

cooks.distance(modmo)
##### cooks.distance: Arroja el valor de las distancias en cada una de las 
##### observaciones 

dc<-cooks.distance(modmo)
etiqueta <- rownames (mochila)
halfnorm(dc, 3, etiqueta)

##### SI NO JALA, VUELVE A INSTALAR Y REQUERIR "faraday".

########## TAREA
##### MODELO EN EL CUÁL META 4 VARIABLES PARA LA PRÓXIMA SEMANA
